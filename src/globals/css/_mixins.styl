@require 'jeet';
@require '_variables';
@require 'icons';

// For headings and titles
ff-title() {
  font-family: 'nta', sans-serif;
  font-weight: bold;
}

// For anything using the standard body text style
ff-body() {
  font-family: 'nta', sans-serif;
  font-weight: normal;
  font-size: $bodyCopy;
  line-height: $lineHeight*1.6;
  margin-bottom: $bodyCopy;
}

// For a real content list with bullet points
real-list() {
  ff-body();
  margin-left: $spacing*4;
  li {
    list-style: disc;
  }
}

// The widget mixin adds the common widget box style that is prevelant throughout the site
widget(padding = $spacing, margin = 0 0 $spacing 0) {
  position: relative;
  background-color $light;
  padding: padding;
  margin: margin;
}

// A set of fixes intended to limit the visibility of mistakes the editor can make in the CMS
cms-fixes() {
  // If certain empty elements are added in the CMS. Simply don't show them.
  p:empty,
  a:empty,
  ul:empty,
  ol:empty,
  table:empty,
  h1:empty,
  h2:empty,
  h3:empty,
  h4:empty,
  h5:empty,
  h6:empty,
  li:empty {
    display:none;
  }

  //for some reason, an editor added an iFrame. This should not be allowed and so this will hide any future iframes they add
  iframe {
    display: none !important;
  }
}

// For buttons!
button(bgc) {
  display: inline-block;
  color: $light;
  background-color: bgc;
  padding: $spacing $spacing*3;
  border: 0;
  font-size: $bodyCopy;
  cursor: pointer;
  text-decoration:none;
  &:hover {
    color: $light;
    background-color: darken(bgc, 20%);
  }
  &.disabled {
    cursor: auto;
    background: desaturate(bgc, 60%);
    opacity: .6;
  }
}

// Agency colour mixin, to be used only in conjunction with the agency mixin below.
agency-color(mode, opacity, color) {
  if(mode == 'bg') { background-color: color }
  if(mode == 'fadebg') { background-color: rgba(color, opacity) }
  if(mode == 'fg') { color: color }
  if(mode == 'fadefg') { color: rgba(color, opacity) }
  if(mode == 'bdr') { border-color: color }
  if(mode == 'fadebdr') { border-color: rgba(color, opacity) }
}

// Agency theme mixin
// Usage, add this to a CSS rule and it will change to match the correct color for the currently selected agency
// modes: 
//  bg: Change background colour to match, 
//  fg: change foreground colour to match, 
//  bdr: change border colour to match, 
//  fadebg: apply a faded background colour to match
//  fadefg: apply a faded foreground colour to match
//  fadebdr: apply a faded border colour to match

agency-theme(mode = "bg", opacity = "100%") {
  .agency-hq &,
  .agency-hmpps &,
  .agency-jac &,
  .agency-ospt &,
  .agency-lc &,
  .agency-cica & {
    agency-color(mode, opacity, $primary)
  }
  .agency-hmcts & {
    agency-color(mode, opacity, $hmcts_primary)
  }
  .agency-laa & {
    agency-color(mode, opacity, $laa_primary)
  }
  .agency-pb & {
    agency-color(mode, opacity, $pb_primary)
  }
  .agency-opg & {
    agency-color(mode, opacity, $opg_primary)
  }
}

// Contrast. Use this to make sure your colours are always contrasting aganst your bg colour!
contrast(color) {
  background-color: color;
  if (dark(color)) {
    color: lighten(color, 40%)
  }
  if (light(color)) {
    color: darken(color, 40%)
  }
}

// The 'icon' value should be the code for the icon you wish you use.
// You can find it in icons.styl by looking at the 'content' value of the appropriate icons class
// Note: This must be used in a 'before' or 'after' pseudoselector
use-icon(icon) {
  content: icon;
  font-family: 'moji-clarity';
  speak: none;
}
